#!/bin/bash
# =================================================================
# OpenVPN Installer & Manager - v2.1 (com Compila√ß√£o de Fonte)
# Baseado no script original do SSH-PRO @TMYCOMNECTVPN
# Revisado para incluir instala√ß√£o via c√≥digo-fonte.
# =================================================================

# --- Vari√°veis de Cor e Interface ---
readonly RED=$'\e[1;31m'; readonly GREEN=$'\e[1;32m'; readonly YELLOW=$'\e[1;33m';
readonly BLUE=$'\e[1;34m'; readonly CYAN=$'\e[1;36m'; readonly WHITE=$'\e[1;37m';
readonly MAGENTA=$'\e[1;35m'; readonly SCOLOR=$'\e[0m'; readonly BOLD=$'\e[1m';
readonly SCRIPT_VERSION="2.1.0"; readonly SCRIPT_NAME="OpenVPN Manager Pro";

# --- Fun√ß√µes de Utilidade ---
die() { echo -e "${RED}[ERRO] $1${SCOLOR}" >&2; exit "${2:-1}"; }
warn() { echo -e "${YELLOW}[AVISO] $1${SCOLOR}"; }
success() { echo -e "${GREEN}[SUCESSO] $1${SCOLOR}"; }
info() { echo -e "${CYAN}[INFO] $1${SCOLOR}"; }
print_line() { echo -e "${BLUE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${SCOLOR}"; }

print_header() {
    clear
    print_line
    echo -e "${BOLD}${WHITE}                    ${SCRIPT_NAME} v${SCRIPT_VERSION}${SCOLOR}"
    print_line
}

# --- Fun√ß√µes de Verifica√ß√£o ---
check_root() { [[ "$EUID" -ne 0 ]] && die "Este script precisa ser executado como ROOT."; }
check_tun() { [[ ! -e /dev/net/tun ]] && die "O dispositivo TUN/TAP n√£o est√° dispon√≠vel."; }

# --- L√ìGICA DE INSTALA√á√ÉO ---

# OP√á√ÉO 1: Instala√ß√£o via Reposit√≥rio (R√°pido e Padr√£o)
install_from_repo() {
    info "Iniciando instala√ß√£o via reposit√≥rio oficial OpenVPN..."
    
    # Adiciona o reposit√≥rio oficial para ter uma vers√£o mais recente que a da distro
    info "Adicionando reposit√≥rio oficial da OpenVPN..."
    apt-get update -qq >/dev/null
    apt-get install -y -qq curl gnupg lsb-release || die "Falha ao instalar ferramentas."
    curl -fsSL https://packages.openvpn.net/packages-repo.gpg | gpg --dearmor -o /usr/share/keyrings/openvpn-archive-keyring.gpg
    local codename; codename="$(lsb_release -sc)"
    echo "deb [signed-by=/usr/share/keyrings/openvpn-archive-keyring.gpg] https://packages.openvpn.net/openvpn2/debian ${codename} main" | tee /etc/apt/sources.list.d/openvpn-packages.list >/dev/null
    apt-get update -qq >/dev/null

    info "Instalando OpenVPN e Easy-RSA..."
    apt-get install -y openvpn easy-rsa || die "Falha ao instalar pacotes OpenVPN."
}

# OP√á√ÉO 2: Compila√ß√£o do C√≥digo-Fonte (Avan√ßado, Vers√£o Mais Recente)
install_from_source() {
    info "Iniciando instala√ß√£o avan√ßada compilando do c√≥digo-fonte..."
    
    # 1. Instalar depend√™ncias de compila√ß√£o
    info "Instalando depend√™ncias para compila√ß√£o..."
    apt-get update -y
    apt-get install -y build-essential libssl-dev liblzo2-dev libpam0g-dev \
        libpkcs11-helper1-dev libsystemd-dev resolvconf pkg-config wget python3 || die "Falha ao instalar depend√™ncias de compila√ß√£o."

    # 2. Encontrar a URL da vers√£o mais recente
    info "Buscando a vers√£o mais recente do OpenVPN..."
    local finder_script="/opt/multiflow/ferramentas/openvpn_version_finder.py"
    if [[ ! -f "$finder_script" ]]; then
        die "Script localizador de vers√£o n√£o encontrado em $finder_script"
    fi
    
    local latest_url
    latest_url=$(python3 "$finder_script")
    if [[ -z "$latest_url" ]]; then
        die "N√£o foi poss√≠vel encontrar a URL da vers√£o mais recente do OpenVPN."
    fi
    success "Vers√£o mais recente encontrada: $latest_url"

    # 3. Baixar e compilar
    local tmp_dir="/tmp/openvpn_build_$$"
    mkdir -p "$tmp_dir"
    cd "$tmp_dir" || die "N√£o foi poss√≠vel entrar no diret√≥rio tempor√°rio."
    
    info "Baixando o c√≥digo-fonte..."
    wget -q --show-progress -O openvpn.tar.gz "$latest_url" || die "Falha no download do c√≥digo-fonte."
    
    local folder_name
    folder_name=$(tar -tzf openvpn.tar.gz | head -1 | cut -f1 -d"/")
    tar -xzf openvpn.tar.gz
    cd "$folder_name" || die "N√£o foi poss√≠vel entrar no diret√≥rio do c√≥digo-fonte."
    
    info "Configurando o ambiente de compila√ß√£o (./configure)..."
    ./configure || die "Falha na etapa de configura√ß√£o."
    
    info "Compilando o OpenVPN (make)... Isso pode levar alguns minutos."
    make || die "Falha na compila√ß√£o."
    
    info "Instalando o OpenVPN (make install)..."
    make install || die "Falha na instala√ß√£o."
    
    # Limpeza
    cd /
    rm -rf "$tmp_dir"
    
    # Instala o Easy-RSA separadamente, pois ele n√£o vem com o c√≥digo-fonte do OpenVPN
    info "Instalando o Easy-RSA..."
    apt-get install -y easy-rsa || die "Falha ao instalar o Easy-RSA."
}

# Fun√ß√£o principal de instala√ß√£o que oferece a escolha
install_openvpn() {
    print_header
    echo -e "${BOLD}${CYAN}              üöÄ INSTALA√á√ÉO DO OPENVPN üöÄ${SCOLOR}"
    print_line
    echo
    echo -e "${WHITE}Voc√™ pode escolher entre dois m√©todos de instala√ß√£o:${SCOLOR}"
    echo
    echo -e "  ${CYAN}[1]${SCOLOR} ${WHITE}Instala√ß√£o Padr√£o (Recomendado)${SCOLOR}"
    echo -e "      ${YELLOW}R√°pido, usa o reposit√≥rio oficial do OpenVPN. √ìtimo para a maioria dos casos.${SCOLOR}"
    echo
    echo -e "  ${CYAN}[2]${SCOLOR} ${WHITE}Instala√ß√£o Avan√ßada (Compilar do C√≥digo-Fonte)${SCOLOR}"
    echo -e "      ${YELLOW}Lento, baixa e compila a vers√£o mais recente dispon√≠vel. Para usu√°rios avan√ßados.${SCOLOR}"
    echo
    print_line
    echo -ne "${WHITE}Escolha o m√©todo de instala√ß√£o [${GREEN}1${WHITE}]: ${SCOLOR}"
    read -r INSTALL_CHOICE

    # Desinstala qualquer vers√£o anterior para uma instala√ß√£o limpa
    apt-get remove --purge -y openvpn easy-rsa >/dev/null 2>&1
    rm -rf /etc/openvpn /etc/easy-rsa ~/ovpn-clients

    if [[ "$INSTALL_CHOICE" == "2" ]]; then
        install_from_source
    else
        install_from_repo
    fi

    local ovpn_version
    ovpn_version=$(openvpn --version | head -1 | awk '{print $2}')
    success "OpenVPN v${ovpn_version} instalado com sucesso!"

    # Continua com a configura√ß√£o do servidor, que √© comum a ambos os m√©todos
    configure_server
    configure_firewall
    start_openvpn_service
    
    echo; print_line
    echo -e "${GREEN}${BOLD}     ‚úÖ CONFIGURA√á√ÉO DO SERVIDOR FINALIZADA! ‚úÖ${SCOLOR}"
    print_line; echo
    
    info "Criando primeiro cliente de demonstra√ß√£o..."
    create_client "cliente1" # Supondo que a fun√ß√£o create_client existe
    
    echo;
    echo -ne "${CYAN}Pressione ENTER para voltar ao menu principal...${SCOLOR}"
    read -r
}

# ... (O resto do seu script: configure_server, create_client, main_menu, etc.) ...
# As outras fun√ß√µes como `configure_server`, `create_client`, `main_menu`
# podem ser mantidas como est√£o, pois a l√≥gica de configura√ß√£o do servidor
# e gerenciamento de clientes n√£o muda. Apenas o m√©todo de instala√ß√£o do bin√°rio
# do OpenVPN foi alterado.

# --- Ponto de Entrada ---
main() {
    check_root
    check_tun
    
    # O script agora vai direto para a fun√ß√£o de instala√ß√£o
    install_openvpn
    
    # Ap√≥s a instala√ß√£o, voc√™ pode chamar o main_menu se desejar
    # main_menu 
}

# Garante que o script seja execut√°vel e chama a fun√ß√£o principal.
# Esta parte √© um exemplo, integre ao seu fluxo existente.
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main
fi
